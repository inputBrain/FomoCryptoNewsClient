@using FomoCryptoNews.Client.Models
@model List<NewsModel>

<div class="container mt-5">
    <table class="table table-hover" id="newsTable">
        <thead>
        <tr>
            <th>Id</th>
            <th>Cover</th>
            <th>Title</th>
            <th>Description</th>
            <th>Status</th>
            <th>Created At</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Id</td>
                <td>
                    @if (!string.IsNullOrEmpty(item.Cover))
                    {
                        <img src="@item.Cover" alt="Cover image" style="max-width: 100px; max-height: 100px;"/>
                    }
                    else
                    {
                        <span>No image</span>
                    }
                </td>
                <td>@item.Title</td>
                <td>@item.Description</td>
                <td>
                        @{
                            string statusClass = item.Status switch
                            {
                                Status.Parsed => "bg-warning text-dark",
                                Status.Approved => "bg-success text-white",
                                Status.Declined => "bg-secondary text-white",
                                Status.Deleted => "bg-danger text-white",
                                _ => "bg-light text-dark"
                            };
                        }
                        <span class="badge @statusClass">@item.Status</span>
                    </td>
                <td>@item.CreatedAt.ToString("f")</td>
                <td>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-sm btn-outline-success">Approve</button>
                        <button type="button" class="btn btn-sm btn-outline-warning">Post on</button>
                        <button type="button" class="btn btn-sm btn-outline-info">Info</button>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <nav aria-label="...">
        <ul class="pagination justify-content-center">
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>
            <li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item active" aria-current="page">
                <span class="page-link">2</span>
            </li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
                <a class="page-link" href="#">Next</a>
            </li>
        </ul>
    </nav>
</div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const approveForms = document.querySelectorAll('.approve-form');

            approveForms.forEach(form => {
                form.addEventListener('submit', async function (e) {
                    e.preventDefault();

                    const newsId = this.querySelector('input[name="newsId"]').value;
                    const response = await fetch(`/Home/ApproveNews?newsId=${newsId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) {
                        alert('News approved successfully!');
                        // Optionally update the UI or reload the page
                        location.reload();
                    } else {
                        alert('Error approving news.');
                    }
                });
            });
        });
    </script>
