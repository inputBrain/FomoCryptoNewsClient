@model List<FomoCryptoNews.Client.Models.NewsModel>
<br>
<br>
<br>
<br>
<br>
<div class="container">
    <table class="table table-striped" id="newsTable">
        <thead class="table-dark">
        <tr>
            <th>Id</th>
            <th>Cover</th>
            <th>Title</th>
            <th>Description</th>
            <th>Created At</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Cover</td>
                <td>@item.Title</td>
                <td>@item.Description</td>
                <td>@item.CreatedAt.ToString("f")</td>
                <td>
                    <button type="button" class="btn btn-outline-success">Approve</button>
                    <button type="button" class="btn btn-outline-warning">Post on</button>
                    <button type="button" class="btn btn-outline-info">Info</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <nav>
        <ul class="pagination justify-content-center" id="pagination"></ul>
    </nav>

</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const table = document.getElementById('newsTable');
        const pagination = document.getElementById('pagination');
        const itemsPerPageSelect = document.getElementById('itemsPerPage');
        let currentPage = 1;
        let itemsPerPage = 10;

        function showPage(page) {
            const rows = table.querySelectorAll('tbody tr');
            const start = (page - 1) * itemsPerPage;
            const end = start + itemsPerPage;

            rows.forEach((row, index) => {
                if (index >= start && index < end) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });

            updatePagination();
        }

        function updatePagination() {
            const rows = table.querySelectorAll('tbody tr');
            const pageCount = Math.ceil(rows.length / itemsPerPage);
            pagination.innerHTML = '';

            for (let i = 1; i <= pageCount; i++) {
                const li = document.createElement('li');
                li.classList.add('page-item');
                if (i === currentPage) li.classList.add('active');

                const a = document.createElement('a');
                a.classList.add('page-link');
                a.href = '#';
                a.textContent = i;
                a.addEventListener('click', (e) => {
                    e.preventDefault();
                    currentPage = i;
                    showPage(currentPage);
                });

                li.appendChild(a);
                pagination.appendChild(li);
            }
        }

        itemsPerPageSelect.addEventListener('change', function() {
            itemsPerPage = parseInt(this.value);
            currentPage = 1;
            showPage(currentPage);
        });

        showPage(currentPage);
    });
</script>